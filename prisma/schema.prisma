// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

model User {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password_hash String
  role          Role
  isDeleted     Boolean  @default(false)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  Student       Student?
  Teacher       Teacher?
  Admin         Admin?

  @@map("users")
}

model Teacher {
  id     String @id @default(uuid())
  userId String @unique

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("teachers")
}

model Admin {
  id     String @id @default(uuid())
  userId String @unique

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("admins")
}

model Student {
  id       String  @id @default(uuid())
  age      Int
  class_id String?
  userId   String  @unique

  user  User   @relation(fields: [userId], references: [id])
  class Class? @relation(fields: [class_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("students")
}

model Class {
  id         String    @id @default(uuid())
  name       String
  section    String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  Student    Student[]

  @@map("classes")
}
